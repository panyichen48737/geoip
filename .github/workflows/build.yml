name: Build geoip files
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - ".gitignore"
      - "config-example.json"
      - "LICENSE"
      - "README.md"
      - ".github/dependabot.yml"
      - ".github/workflows/delete-old-workflows.yml"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
          repo: DustinWin/clash-geoip

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: ./go.mod

      - name: Set variables
        run: |
          echo "TAG_NAME=latest" >> $GITHUB_ENV
          echo "RELEASE_NAME=latest" >> $GITHUB_ENV
        shell: bash

      - name: Fetch lists from ripe.net
        run: |
          chmod +x asn.sh
          ./asn.sh

      - name: Append more CIDRs
        env:
          SED: grep -v "#" | sed '/^\s*$/d'
        run: |
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_IP.txt | grep -v '^::' | ${{ env.SED }} >> data/cnip
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml | grep "IP-CIDR" | sed 's/.*,//g' | ${{ env.SED }} >> data/lanip
          curl -sSL https://core.telegram.org/resources/cidr.txt >> data/telegramip

      - name: Build geoip files
        run: |
          go run ./

      - name: Verify mmdb files
        run: |
          cd ./output/maxmind || exit 1
          go install -v github.com/maxmind/mmdbverify@latest
          for name in $(ls *.mmdb); do
            $(go env GOPATH)/bin/mmdbverify -file ${name}
          done

      - name: Move files to publish directory
        run: |
          mkdir -p publish/text
          mv ./output/dat/*.dat ./output/maxmind/*.mmdb ./publish
          cp -f ./output/text/cnip.txt ./publish/text
          cp -f ./output/text/lanip.txt ./publish/text
          cp -f ./output/text/telegramip.txt ./publish/text

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add -A
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add geoip "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u geoip release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done

      - name: Remove some files to avoid publishing to GitHub release
        run: rm -rf ./publish/*.{gz,zip} ./publish/text

      - name: Upload files to GitHub release
        uses: softprops/action-gh-release@v1
        with:
          name: latest
          tag_name: latest
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
