name: Build geoip files
on:
  workflow_dispatch:
  schedule:
    - cron: "30 18 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - ".gitignore"
      - "config-example.json"
      - "LICENSE"
      - "**/README.md"
      - ".github/dependabot.yml"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Fetch lists from ripe.net
        run: |
          chmod +x asn.sh
          ./asn.sh

      - name: Get GeoLite2
        env:
          LICENSE_KEY: ${{ secrets.MAXMIND_GEOLITE2_LICENSE }}
        run: |
          curl -o GeoLite2-Country-CSV.zip -L "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country-CSV&license_key=${LICENSE_KEY}&suffix=zip"
          unzip -o GeoLite2-Country-CSV.zip
          rm -f GeoLite2-Country-CSV.zip
          mv -f GeoLite2* geolite2
          grep -E ',country_iso_code,|,CN,' ./geolite2/GeoLite2-Country-Locations-en.csv > ./geolite2/temp-GeoLite2-Country-Locations-en.csv
          mv -f ./geolite2/temp-GeoLite2-Country-Locations-en.csv ./geolite2/GeoLite2-Country-Locations-en.csv

      - name: Set variables
        run: |
          echo "update_version=$(date -d '+8 hours' +%Y-%m-%d)" >> ${GITHUB_ENV}
          echo "netflix=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix_IP.txt" >> $GITHUB_ENV
          echo "telegram=https://core.telegram.org/resources/cidr.txt" >> $GITHUB_ENV
          echo "private=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.list" >> $GITHUB_ENV
          echo "cn1=https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt" >> $GITHUB_ENV
          echo "cn2=https://raw.githubusercontent.com/gaoyifan/china-operator-ip/ip-lists/china.txt" >> $GITHUB_ENV
          echo "cn3=https://raw.githubusercontent.com/gaoyifan/china-operator-ip/ip-lists/china6.txt" >> $GITHUB_ENV
          echo "cn4=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaIPs/ChinaIPs_IP.txt" >> $GITHUB_ENV
        shell: bash

      - name: Generate netflix
        run: |
          mkdir -p ./clash/ ./sing-box/ ./ips
          curl -sSL ${netflix} | grep -v '#' | sed '/^\s*$/d' > ./data/netflix

      - name: Generate telegram
        run: |
          curl -sSL ${telegram} > ./data/telegram

      - name: Generate private
        run: |
          curl -sSL ${private} | grep -v '#' | grep 'IP-CIDR' | sed 's/[^,]*,//' | sed 's/,.*//g' > ./data/private

      - name: Generate cn
        run: |
          curl -sSL ${cn1} | sed '/^\s*$/d' >> ./data/cn
          curl -sSL ${cn2} | sed '/^\s*$/d' >> ./data/cn
          curl -sSL ${cn3} | sed '/^\s*$/d' >> ./data/cn
          curl -sSL ${cn4} | grep -v '#' | sed '/^\s*$/d' >> ./data/cn

      - name: Build geoip files
        run: |
          go run ./

      - name: Verify mmdb files
        run: |
          cd ./output/maxmind/ || exit 1
          go install -v github.com/maxmind/mmdbverify@latest
          for name in $(ls *.mmdb); do
            $(go env GOPATH)/bin/mmdbverify -file ${name}
          done

      - name: Get geoip-all.dat and Country-all.mmdb relative files
        run: |
          curl -o ./output/dat/geoip-all.dat -L https://raw.githubusercontent.com/Loyalsoldier/geoip/release/geoip.dat
          curl -o ./output/maxmind/Country-all.mmdb -L https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb

      - name: Build db and metadb file
        env:
          NO_SKIP: true
        run: |
          go install -trimpath -ldflags="-s -w -buildid=" github.com/metacubex/geo/cmd/geo@master
          cd ./output/dat/ || exit 1
          for file in $(ls *.dat | sed 's/\..*//g'); do
            geo convert ip -i v2ray -o meta -f "./${file}.metadb" "./${file}.dat"
            geo convert ip -i v2ray -o sing -f "./${file}.db" "./${file}.dat"
          done

      - name: Move files
        run: |
          cd ./output/dat/ || exit 1
          for file in $(ls *.dat *.metadb); do
            install -Dp "./${file}" ../../clash/
          done
          for file in $(ls *.db); do
            install -Dp "./${file}" ../../sing-box/
          done

      - name: Move files to branchs
        run: |
          cp -f ./output/maxmind/*.mmdb ./clash/
          grep -v '::' ./output/text/cn.txt > ./output/text/cn_ipv4.txt
          grep '::' ./output/text/cn.txt > ./output/text/cn_ipv6.txt
          cp -rf ./output/text/* ./ips/
          rm -rf ./output*

      - name: Commit and push `ips` branch
        run: |
          cd ./ips/ || exit 1
          git init
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout -b ips
          git add . && git commit -m "IP 段列表更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin ips

      - name: Release and upload `clash` assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: clash
          tag: clash
          overwrite: true
          body: "[Clash](https://github.com/Dreamacro/clash) geoip 文件"
          file_glob: true
          file: ./clash/*

      - name: Git push assets to "clash" branch
        run: |
          cd ./clash/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b clash
          git add .
          git commit -m "Clash geoip 文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin clash

      - name: Release and upload `sing-box` assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: sing-box
          tag: sing-box
          overwrite: true
          body: "[sing-box](https://github.com/SagerNet/sing-box) geoip 文件"
          file_glob: true
          file: ./sing-box/*

      - name: Git push assets to "sing-box" branch
        run: |
          cd ./sing-box/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b sing-box
          git add .
          git commit -m "sing-box geoip 文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin sing-box

      - name: Purge jsDelivr CDN
        run: |
          cd ./ips/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@ips/${file}"
          done
          cd ../clash/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@clash/${file}"
          done
          cd ../sing-box/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing-box/${file}"
          done

      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 3
          keep_minimum_runs: 1
