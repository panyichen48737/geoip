name: Build geoip files
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - ".gitignore"
      - "config-example.json"
      - "LICENSE"
      - "README.md"
      - ".github/dependabot.yml"
      - ".github/workflows/delete-old-workflows.yml"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Delete current tag and release
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
          repo: DustinWin/clash-geoip

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: ./go.mod

      - name: Set variables
        run: |
          echo "update_version=$(date +%Y-%m-%d)" >> ${GITHUB_ENV}
          echo "RELEASE_NAME=latest" >> $GITHUB_ENV
          echo "netflix=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix_IP.txt" >> $GITHUB_ENV
          echo "telegram=https://core.telegram.org/resources/cidr.txt" >> $GITHUB_ENV
          echo "private=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.list" >> $GITHUB_ENV
          echo "cn1=https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt" >> $GITHUB_ENV
          echo "cn2=https://raw.githubusercontent.com/gaoyifan/china-operator-ip/ip-lists/china.txt" >> $GITHUB_ENV
          echo "cn3=https://raw.githubusercontent.com/gaoyifan/china-operator-ip/ip-lists/china6.txt" >> $GITHUB_ENV
          echo "cn4=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_IP.txt" >> $GITHUB_ENV
        shell: bash

      - name: Generate netflix
        run: |
          mkdir -p ./tmp ./IPs ./publish
          curl -sSL ${netflix} | grep -v '#' | sed '/^\s*$/d' > ./IPs/netflix.txt

      - name: Generate telegram
        run: |
          curl -sSL ${telegram} | sed '/^\s*$/d' > ./IPs/telegram.txt

      - name: Generate private
        run: |
          curl -sSL ${private} | grep -v '#' | grep 'IP-CIDR' | sed 's/[^,]*,//' | sed 's/,.*//g' | sed '/^\s*$/d' > ./IPs/private.txt

      - name: Generate cn
        run: |
          curl -sSL ${cn1} | sed '/^\s*$/d' > ./tmp/temp-cn-ipv4.txt
          curl -sSL ${cn2} | sed '/^\s*$/d' >> ./tmp/temp-cn-ipv4.txt
          curl -sSL ${cn4} | grep -Ev '#|::' | sed '/^\s*$/d' >> ./tmp/temp-cn-ipv4.txt
          sort --ignore-case -u ./tmp/temp-cn-ipv4.txt > ./tmp/cn-ipv4.txt
          awk -F'/' '!seen[$1]++' ./tmp/cn-ipv4.txt > ./IPs/cn-ipv4.txt
          curl -sSL ${cn3} | sed '/^\s*$/d' > ./tmp/temp-cn-ipv6.txt
          curl -sSL ${cn4} | grep -Ev '#|^::' | grep '::' | sed '/^\s*$/d' >> ./tmp/temp-cn-ipv6.txt
          sort --ignore-case -u ./tmp/temp-cn-ipv6.txt > ./tmp/cn-ipv6.txt
          awk -F'/' '!seen[$1]++' ./tmp/cn-ipv6.txt > ./IPs/cn-ipv6.txt
          cat ./IPs/cn-ipv4.txt ./IPs/cn-ipv6.txt > ./IPs/cn.txt
          rm -rf ./tmp

      - name: Commit and push IPs
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add . && git commit -m "更新于 ${update_version}" || exit 0
          git push -f

      - name: Fetch lists from ripe.net
        run: |
          chmod +x asn.sh
          ./asn.sh

      - name: Build geoip files
        run: |
          go run ./

      - name: Verify mmdb files
        run: |
          cd ./output/maxmind || exit 1
          go install -v github.com/maxmind/mmdbverify@latest
          for name in $(ls *.mmdb); do
            $(go env GOPATH)/bin/mmdbverify -file ${name}
          done

      - name: Move files to publish directory
        run: |
          mv -f ./output/dat/*.dat ./output/maxmind/*.mmdb ./publish
          cp -rf ./output/text ./publish

      - name: Git push assets to "release" branch
        run: |
          cd ./publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add geoip "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u geoip release

      - name: Purge jsDelivr CDN IPs
        run: |
          cd ./IPs || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}/master/IPs/${file}"
          done

      - name: Purge jsDelivr CDN release
        run: |
          cd ./publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done

      - name: Release and upload assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: latest
          tag: latest
          file_glob: true
          file: ./publish/*
